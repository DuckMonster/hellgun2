#pragma once
#define WIN32_LEAN_AND_MEAN 1
#include <windows.h>
#include <gl/gl.h>
#include <GL/glext.h>
#undef near
#undef far

void load_gl_extensions();

#ifndef GL_IMPLEMENT

#define GL_PROC(proc, name)\
extern proc name

#else

#define GL_PROC(proc, name)\
proc name

#endif

// VBO
GL_PROC(PFNGLGENBUFFERSPROC, glGenBuffers);
GL_PROC(PFNGLDELETEBUFFERSPROC, glDeleteBuffers);
GL_PROC(PFNGLBINDBUFFERPROC, glBindBuffer);
GL_PROC(PFNGLBUFFERDATAPROC, glBufferData);
GL_PROC(PFNGLBUFFERSUBDATAPROC, glBufferSubData);

// VAO
GL_PROC(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays);
GL_PROC(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays);
GL_PROC(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray);
GL_PROC(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray);
GL_PROC(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer);

// SHADERS
GL_PROC(PFNGLCREATESHADERPROC, glCreateShader);
GL_PROC(PFNGLDELETESHADERPROC, glDeleteShader);
GL_PROC(PFNGLSHADERSOURCEPROC, glShaderSource);
GL_PROC(PFNGLCOMPILESHADERPROC, glCompileShader);
GL_PROC(PFNGLGETSHADERIVPROC, glGetShaderiv);
GL_PROC(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog);

GL_PROC(PFNGLCREATEPROGRAMPROC, glCreateProgram);
GL_PROC(PFNGLDELETEPROGRAMPROC, glDeleteProgram);
GL_PROC(PFNGLATTACHSHADERPROC, glAttachShader);
GL_PROC(PFNGLDETACHSHADERPROC, glDetachShader);
GL_PROC(PFNGLLINKPROGRAMPROC, glLinkProgram);
GL_PROC(PFNGLUSEPROGRAMPROC, glUseProgram);
GL_PROC(PFNGLGETPROGRAMIVPROC, glGetProgramiv);
GL_PROC(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog);

// UNIFORMS
GL_PROC(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation);

GL_PROC(PFNGLUNIFORM1FPROC, glUniform1f);
GL_PROC(PFNGLUNIFORM4FVPROC, glUniform4fv);
GL_PROC(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv);

// TEXTURES